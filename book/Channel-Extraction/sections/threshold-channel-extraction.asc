=== Channel extraction using thresholds

One of the simplest ways of extracting channel networks from DEMs uses a contributing area threshold.  This method is useful for coarse resolution (e.g. >10m) DEMs, where topographic features of the channel heads themselves cannot be reliably identified from the DEM. The user has to specify the threshold area, which represents the upstream area that must drain to a pixel before it is considered as part of the channel.

NOTE: The area threshold chosen will affect the density of the channel network.  This should be considered carefully, and compared against field-mapped channel head data if these are available.

==== Extracting the network with an area threshold using the *Channel extraction tool*

. To extract a network using a threshold area, you need to switch on the `print_area_threshold_channels` option. 

. The parameter file will look something like this:
+
[source,paramfile]
----
# Parameters for channel extraction
# Comments are preceeded by the hash symbol
# Documentation can be found here: 
# TBA

# These are parameters for the file i/o
# IMPORTANT: You MUST make the write directory: the code will not work if it doens't exist. 
read path: /LSDTopoTools/Topographic_projects/test_data
write path: /LSDTopoTools/Topographic_projects/test_data
read fname: gabilan
write fname: gabilan
channel heads fname: NULL

# Parameter for filling the DEM
min_slope_for_fill: 0.0001

# Parameters for selecting channels and basins
threshold_contributing_pixels: 2500
print_area_threshold_channels: true

# Printing of the data
write hillshade: true
print_stream_order_raster: true
print_channels_to_csv: true
----
+
. Save this parameter file in the directory with the data (i.e., in `/LSDTopoTools/Topographic_projects/test_data`). Call it something sensible. 

. Now got into the directory with the *chi mapping tool* (i.e., `/LSDTopoTools/Git_projects/LSDTopoTools_ChannelExtraction/driver_functions_ChannelExtraction`) and run:
+
[source,console]
----
$ ./chi_mapping_tool.exe /LSDTopoTools/Topographic_projects/test_data NAME_OF_PARAMFILE.driver
----
+
. This should print out both a raster of stream orders and a hillshade raster, and in addition a `csv` file with channel nodes. If you import this `csv` into a GIS you should select the coordinate system http://spatialreference.org/ref/epsg/wgs-84/[WGS84].



==== Basic channel extraction using thresholds (the old way)

.*Important Warning*
*****************************************
This describes our original way of doig things, but now you should use the *channel extraction tool*
Read about that here: <<The Channel Extraction tool>>.
*****************************************


One of the simplest ways of extracting channel networks from DEMs uses a contributing area threshold.  This method is useful for coarse resolution (e.g. >10m) DEMs, where topographic features of the channel heads themselves cannot be reliably identified from the DEM. The user has to specify the threshold area, which represents the upstream area that must drain to a pixel before it is considered as part of the channel.

NOTE: The area threshold chosen will affect the density of the channel network.  This should be considered carefully, and compared against field-mapped channel head data if these are available.

We will work through an example using the Indian Creek example dataset that you downloaded.

===== Compile the code

We can extract threshold area channel networks using the driver function called `channel_extraction_area_threshold.cpp`.  To compile the code you first need to navigate to the driver functions folder in the repository.

[source,console]
----
$ cd driver_functions_ChannelExtraction/
----
When in this folder type the following to compile the driver:

[source,console]
----
$ make -f channel_extraction_area_threshold.make
----

This will create a program called `channel_extraction_area_threshold.out`

===== Run the analysis

To run the analysis you first need to create a parameter file, with which we will set the key user-defined parameters.  To create your parameter file, open any text editor and create a file with the following lines:

[source,paramfile]
----
Name of the DEM without extension
Minimum slope for filling the DEM (suggested to be 0.0001)
Threshold area for channel extraction 
----

The threshold area must be given in m^2^.  You need to save this parameter file in the folder `LSDTopoTools_ChannelExtraction` (one folder above the driver functions folder).  For the Indian Creek site we can create a parameter file called `indian_creek_threshold.driver` with the following lines:

[source,paramfile]
----
indian_creek
0.0001
1000
----

After creating the parameter file we can then run the code using the following command:

[source,console]
----
$ ./channel_extraction_area_threshold.out /path_to_repository_folder/ param_file_name
----

For our Indian Creek example our command would be:

[source,console]
----
$ ./channel_extraction_area_threshold.out /home/LSDTT_repositories/LSDTopoTools_ChannelExtraction/ indian_creek_threshold.driver
----

Once this program has run, it will create several files with the extracted channel network.  These include:

** A CSV file with the channel heads e.g. `indian_creek_CH_nodeindices_for_arc.csv`
** A `bil` file with the channel heads e.g. `indian_creek_CH.bil`
** A `bil` file with the stream network with Strahler stream ordering e.g. `indian_creek_SO.bil`

The figure below shows the extracted channel network for the Indian Creek field site with a threshold of 1000 m^2^.

.Map of Indian Creek with channel network extracted from threshold area
image::images/ind_so_area.png[Map of Indian Creek with channel network extracted from threshold area]