=== Geometric channel extraction methods

For higher-resolution DEMs a number of different methods have been developed to extract channel networks more accurately.  This section details how to extract channels using methods relying on geometric signatures of channel incision, primarily how it affects planform curvature. Although many methods have been developed that use a variety of planform curvature to detect channel heads, we will discuss three methods: the Geonet method the Geonet method (developed by Passalacqua et al. 2010a, b, 2012), a method developed by Pelletier (2013) and implemented in **LSDTopoTools**, and a similar geometric method available within **LSDTopoTools**.

==== Geonet (external software)

The Geonet algorithm filters the DEM using a Perona-Malik filter, then uses a planform curvature threshold which is statistically derived from the landscape to detect channel heads. For full information on how Geonet works please see Passalcqua et al. (2010a, b, 2012). It then uses a contributing area threshold to thin the skeleton and create the final channel network.  The Geonet algorithm is available free to download from https://sites.google.com/site/geonethome/home[the Geonet website]. This site also contains the code documentation and user guides on how to get started with Geonet. It is a cross platform MATLAB package (you will need a MATLAB licence to run in its present form).

==== Pelletier

http://onlinelibrary.wiley.com/doi/10.1029/2012WR012452/abstract[Pelletier (2013)] developed an algorithm that is similar to Geonet in that it identifies channel heads based on a planform curvature threshold.  The main differences between this algorithm and Geonet are:

** It uses an optimal Wiener threshold to filter the data rather than a Perona-Malik filter
** It sets a user-defined curvature threshold (e.g. 0.1 m^-1^) rather than defining it statistically for the landscape in question
** It does not use a contributing area threshold to thin the skeleton - instead it uses a multi-directional flow routing algorithm

The Pelletier algorithm has been implemented in LSDTopoTools.  In order to run it you should follow the steps below.

NOTE: To run the Pelletier algorithm you need to have the Fast Fourier Transform Library downloaded into your folder `LSDTopoTools_ChannelExtraction`. You can download it at http://www.fftw.org/download.html.

===== Compile the code

To compile the code navigate to the folder driver_functions_ChannelExtraction.  In a terminal window type the following to compile the driver:

[source,console]
----
$ make -f channel_extraction_pelletier.make
----

This will create a program called `channel_extraction_pelletier.out` which you can use to run the code.

===== Run the analysis

We first need to create a parameter file similar to that for the <<Basic channel extraction using thresholds>>. To create your parameter file, open any text editor and create a file with the following lines:

[source,paramfile]
----
Name of the DEM without extension
Minimum slope for filling the DEM (suggested to be 0.0001)
Threshold area for initial channel network (should be small e.g. 250)
Curvature threshold for channel extraction (suggested by Pelletier (2013) to be 0.1 to avoid extracting threshold hillslopes)
Minimum catchment area (suggested to be 400)
----

You need to save this parameter file in the folder `LSDTopoTools_ChannelExtraction` (one folder above the driver functions folder).  For the Indian Creek site we can create a parameter file called `indian_creek_pelletier.driver` with the following lines:

[source,paramfile]
----
indian_creek
0.0001
250
0.1
400
----

After creating the parameter file we can then run the code using the following command:

[source,console]
----
$ ./channel_extraction_pelletier.out /path_to_repository_folder/ param_file_name
----

For our Indian Creek example our command would be:

[source,console]
----
$ ./channel_extraction_pelletier.out /home/LSDTT_repositories/LSDTopoTools_ChannelExtraction/ indian_creek_pelletier.driver
----

Once this program has run, it will create several files with the extracted channel network.  These include:

** A CSV file with the channel heads e.g. `indian_creek_CH_Pelletier_nodeindices_for_arc.csv`
** A `bil` file with the channel heads e.g. `indian_creek_CH_Pelletier.bil`
** A `bil` file with the stream network with Strahler stream ordering e.g. `indian_creek_SO_Pelletier.bil`

The figure below shows the extracted channel network using the Pelletier algorithm for the Indian Creek field site with a planform curvature threshold of 0.1 m^-1^.

.Map of Indian Creek with channel network extracted from Pelletier algorithm
image::images/ind_so_pel.png[Map of Indian Creek with channel network extracted from Pelletier algorithm]

==== The LSDTopoTools geometric method

Within LSDTopoTools we have also developed a method for extracting channel heads via planform curvature.  We first of all filter the DEM using an Optimal Wiener filter, then use a quantile-quantile threshold to statistically determine the planform curvature threshold from the landscape. It then uses a http://www.ncbi.nlm.nih.gov/pubmed/18390379[connected components threshold] to extract the channel network.

NOTE: To run the LSDTopoTools algorithm you need to have the Fast Fourier Transform Library downloaded into your folder `LSDTopoTools_ChannelExtraction`. You can download it at http://www.fftw.org/download.html.

===== Compile the code

To compile the code navigate to the folder driver_functions_ChannelExtraction.  In a terminal window type the following to compile the driver:

[source,console]
----
$ make -f channel_extraction_wiener.make
----

This will create a program called `channel_extraction_wiener.out` which you can use to run the code.

===== Run the analysis

We first need to create a parameter file similar to that for the <<Basic channel extraction using thresholds>>. To create your parameter file, open any text editor and create a file with the following lines:

[source,paramfile]
----
Path and file name of the DEM without extension
Path and output name prefix for your files
Path and output name prefix for the quantile-quantile information
Window radius for filtering the DEM
Threshold area for thinning the channel skeleton
Connected components threshold (should be 100)
----

The threshold area is given in m^2^. You need to save this parameter file in the folder `LSDTopoTools_ChannelExtraction` (one folder above the driver functions folder).  For the Indian Creek site we can create a parameter file called `indian_creek_wiener.driver` with the following lines:

[source,paramfile]
----
RasterFile /home/LSDTT_repositories/LSDTopoTools_ChannelExtraction/indian_creek
OutputRasterFile /home/LSDTT_repositories/LSDTopoTools_ChannelExtraction/indian_creek
QQFile /home/LSDTT_repositories/LSDTopoTools_ChannelExtraction/indian_creek_qq
window_radius_for_surface_fitting 6
threshold_drainage_area 1000
connected_components_threshold 100
----

After creating the parameter file we can then run the code using the following command:

[source,console]
----
$ ./channel_extraction_wiener.out /path_to_repository_folder/ param_file_name
----

For our Indian Creek example our command would be:

[source,console]
----
$ ./channel_extraction_wiener.out /home/LSDTT_repositories/LSDTopoTools_ChannelExtraction/ indian_creek_wiener.driver
----

Once this program has run, it will create several files with the extracted channel network.  These include:

** A CSV file with the channel heads e.g. `indian_creek_CH_wiener_nodeindices_for_arc.csv`
** A `bil` file with the channel heads e.g. `indian_creek_CH_wiener.bil`
** A `bil` file with the stream network with Strahler stream ordering e.g. `indian_creek_SO_wiener.bil`

The figure below shows the extracted channel network using the LSDTopoTools geometric algorithm with an Optimal Wiener filter for the Indian Creek field site.

.Map of Indian Creek with channel network extracted from LSDTopoTools geometric algorithm with an Optimal Wiener filter
image::images/ind_so_wiener.png[Map of Indian Creek with channel network extracted from LSDTopoTools geometric algorithm with an Optimal Wiener filter]



