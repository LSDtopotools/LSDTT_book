[appendix]
== Using the LSDTopoToolsSetup.py script

To help you set up *LSDTopoTools*, we have written a series of modules in https://www.python.org/[python] that automate the creation of our standard directory structure, downloading of the source code and compiling the source code into programs. The script is called https://github.com/LSDtopotools/LSDAutomation/blob/master/LSDTopoToolsSetup.py[LSDTopoToolsSetup.py]. 

=== Getting the LSDTopoTools setup script

LSDTopoTools works in all popular operating systems (Windows, MacOS, Linux) by using https://www.vagrantup.com/[Vagrant] to create a Linux server within your host operating system: if you are not in a native Linux environment you should start a Vagrant server by http://lsdtopotools.github.io/LSDTT_book/#_installing_lsdtopotools_using_virtualbox_and_vagrant[following these directions]. 

Once you have done that, you should be able to https://en.wikipedia.org/wiki/Secure_Shell[ssh] into a Linux session using http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html[putty.exe] on Windows or the `vagrant ssh` command in MacOS and Linux. 

Once you are in a Linux operating system, the easiest way to get the script is to use the utility `wget`:

[source, console]
----
$ wget https://raw.githubusercontent.com/LSDtopotools/LSDAutomation/master/LSDTopoToolsSetup.py
----

==== Alternatives to wget

You can also get the script by cloning the LSDAutomation repository:

[source, console]
----
$ git clone https://github.com/LSDtopotools/LSDAutomation.git
----

or you can got to the https://raw.githubusercontent.com/LSDtopotools/LSDAutomation/master/LSDTopoToolsSetup.py[raw text of the file], then copy the text and paste into your favourite text editor (i.e. http://brackets.io/[Brackets]). You should save the file as `LSDTopoToolsSetup.py`. 

=== Running the LSDTopoTools setup script

The setup script is a python script so you need python to run it. It should be run **in Linux**, so if you do not have a native Linux operating system the script should be run in your Vagrant server. Almost all flavours of Linux come with python installed as default (the Ubuntu system installed by our vagrantfiles is one example) so we will assume you have python. 

The script requires parameters; if you run the script with no parameters, it will give you a message telling you what to do:

[source, console]
----
$ python LSDTopoToolsSetup.py

=======================================================================
Hello there, I am the going to help you set up LSDTopoTools!
You will need to tell me what to do.
If you are in vagrant, LSDTopoTools will always be installed in the root directory (\).
If you are not in vagrant,
LSDTopoTools will be installed in your home directory if you run this with:
   python LSDTopoToolsSetup.py -id 0

Or your current directory.
(i.e., the directory from which you called this program)

if you run with this:
   python LSDTopoToolsSetup.py -id 1

For help type:
   python LSDTopoToolsSetup.py -h

=======================================================================
----

==== Looking at all the LSDTopoToolsSetup options

You can call help for the `LSDTopoToolsSetup.py` script with:

[source, console]
----
$ python LSDTopoToolsSetup.py -h
----

==== A default setup

In fact, there is no default setup, since you have to tell the tool where to install *LSDTopoTools*. You do this by using the `-id` flag. 

* If you select 0, LSDTopoTools will be installed in your home directory, which you can get to with the command `cd ~`.
* If you select 1, LSDTopoTools will be installed in the current directory (i.e. the directory where the script is located). 
* If you are running a vagrant machine, these instructions will be ignored and LSDTopoTools will be installed in the root directory (you can get there with the command `cd \`).

This will install a directory `LSDTopoTools` with subdirectories `Git_projects` and `Topographic_projects`. Each of these folders will clone subfolders from our github pages, and will compile the *Analysis_driver* as well as the *chi_tool*.

The directories will look like this: 

[source,console]
----
/LSDTopoTools
  |--Git_projects
  |----LSDTopoTools_AnalysisDriver
  |----LSDTopoTools_ChiMudd2014
  |--Topographic_projects
  |----LSDTT_workshop_data
  |----Test_data
----

==== Other setup options

There are a number of other options on `LSDTopoToolsSetup.py`, which we will list here, as well as in the <<Table of LSDTopoToolsSetup.py options,table below>>.

* `-CE True` Clone and compile the channel extraction programs used in http://onlinelibrary.wiley.com/doi/10.1002/2013WR015167/abstract[Clubb et al, WRR, 2014]. 
* `-MChi True` Clone and compile the tools for performing the chi analysis of http://onlinelibrary.wiley.com/doi/10.1002/2013JF002981/abstract[Mudd et al., JGR-ES, 2014].
* `-CRN True` Clone and compile the tools for calculating basinwide denudation rates from the cosmogenic nuclides ^10^Be and ^26^Al http://www.earth-surf-dynam.net/4/655/2016/[Mudd et al., ESURF, 2016].
* `-cp True` Check the path names in all the subfolders in `Topographic_projects` to reflect your own directory structure. 

==== If you are running on native Linux

If your native operating system is Linux, you should be able to get *LSDTopoTools* working very quickly using `LSDTopoToolsSetup.py` without having to use vagrant. However, you do need to ensure that you have the utilities `make`, the gnu Pass:[C++] compiler installed, and also you need http://www.fftw.org/[FFTW] installed. If you are in Ubuntu installing FFTW is as easy as: `sudo apt-get install -y libfftw3-dev`. If you are in another flavour of Linux you will need to follow the full setup, which is described on the http://www.fftw.org/[FFTW website]. Once you have that stuff working, you can use `LSDTopoToolsSetup.py` to get everything working in a jiffy. 


=== Table of LSDTopoToolsSetup.py options

[cols="1,1,2", options="header"]
.Installation directory options
|===
|Flag
|Input type
|Description

|`-id`
|Integer, either 0 or 1
|0 == home directory, 1 == current directory. If you are in vagrant it will ignore this option and install in the root directory.

|`-CRN`
|Boolean (either True or False)
|If this is True, installs the CAIRN CRN package for calculating basinwide denudation rates from the cosmogenic nuclides ^10^Be and ^26^Al http://www.earth-surf-dynam.net/4/655/2016/[Mudd et al., ESURF, 2016].

|`-CE`
|Boolean (either True or False)
|If this is True, installs the channel extraction programs used in http://onlinelibrary.wiley.com/doi/10.1002/2013WR015167/abstract[Clubb et al, WRR, 2014]. 

|`-MChi`
|Boolean (either True or False)
|If this is True, installs the tools for performing the chi analysis of http://onlinelibrary.wiley.com/doi/10.1002/2013JF002981/abstract[Mudd et al., JGR-ES, 2014]. 

|`-cp`
|Boolean (either True or False)
|If this is True,  checks the pathnames of the parameter files `.driver` and `.LSDTT_driver` in all the subfolders of `Topographic_projects` and corrects them so they reflect the user's directory structure. 
|===




