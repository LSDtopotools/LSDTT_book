=== Installing LSDTopoTools on a Windows machine using VirtualBox and Vagrant

There are a number of ways to get LSDTopoTools working on your computer, of varying difficulty. 

1. Get LSDTopoTools working natively in Windows. This is possible, but very painful. 
2. Get it working in a full Linux operating system via virtual machine software, such as https://www.virtualbox.org/[virtualbox]. Note that you can do this in Windows, Linux or Apple operating systems. 
3. Get it working on a locally hosted linux server using https://www.virtualbox.org/[virtualbox] and https://www.vagrantup.com/[vagrant]. Again, you can do this on any common operating system. 

Be afraid of option #1. Be very afraid. Option #2 is reliable (you can see how to do it in the appendix) but it means you will need to install all the necessary software yourself, which can take several hours. 
Option #3, involving Vagrant, is a bit more automated. It will still take some time the first time you boot your vagrant virtual machine, since a bunch of software will be installed, but we do automate this process for you. 

==== First steps

1. You need software for running virtual machines. We reccomend https://www.virtualbox.org/[virtualbox] since it is both well supported and free. Download and install. Our instrctions assume you are using virtual box. 
2. Download and install https://www.vagrantup.com/[Vagrant].

https://www.vagrantup.com/[Vagrant] is software that automates the creation and provisioning of virtual machines. 


==== Vagrant details and gotchas

Not all base boxes work!

IMPORTANT: On many windows machines, you can only run a 32 bit version of linux, even though you are almost certainly running 64 bit windows. You can change this by going into your BIOS and changing the settings, but that is dangerous and if you do not know what your BIOS is do not even think about attempting to change these settings. 

In testing, I found many bases boxes did not work at all. The one that worked well for me was the `ubuntu/precise32` box. You can get this started with:

[source,console]
-------------------------------
PS> C:\vagrant init ubuntu/precise32
-------------------------------

Alternatively you can just `vagrant init` and empty vagrant instance and change the box in the vagrantfile with `config.vm.box = "ubuntu/precise32"`.

==== Details of provisioning

If you have downoaded our vagrant files, the provisioning of your virtual server should be automatic. However, you may wish to know what is happening during the provisioning, so here are some notes. 

To install software, we use the shell provisioning system of vagrant. This should go into the vagrantfile and will look a bit like this:

[source,vagrantfile]
-------------------------------
  config.vm.provision "shell", inline: <<-SHELL
    sudo apt-get update
    sudo apt-get install -y git
  SHELL
-------------------------------

In the above shell command, we are installing git. The `-y` flag is important since apt-get will ask if you actually want to download the software and if you do not tell it `-y` from the shell script it will just abort the installation. 