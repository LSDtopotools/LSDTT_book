=== Essential software

IMPORTANT: This isn't our actual software! It is all the extra bits of software that you need to get working before you can use LSDTopoTools!

This list goes slightly beyond getting the tools alone to run;
it includes the software you need to get recent versions of the software and to visualize the output.

Instructions for installing all of these software packages are in the appendices.
There you will find instructions for <<Setting up on Windows,installing the software on a windows operating system>>
and for <<Setting up on Linux,installing the software on a Linux operating system>>.


==== Git

https://git-scm.com/[Git] is version control software. Version control software helps you keep track of changes to your scripts, notes, papers, etc.
It also facilitates communication and collaboration through the online communities https://github.com/[github] and https://bitbucket.org/[bitbucket].

We post updated versions of our software to the Github site https://github.com/LSDtopotools.
We also post version of the software used in publications on the CSDMS github site:
https://github.com/csdms.

It is possible to simply download the software from these sites but if you want to keep track of our updates or modify the software it will be better if you have git installed on your computer.

==== A compiler and other tools associated with the source code

You will need a compiler to build the software, as it is written in https://en.wikipedia.org/wiki/C%2B%2B[c++].
In addition you will need a few tools to go along with the compiler. The things you *really* need are:

. A c++ compiler. We use the https://gcc.gnu.org/[GNU compilers]
. The `make` utility. Most of the code is compiled by calling `g++` from this utility.

In addition the http://math.nist.gov/tnt/overview.html[TNT] library is required,
but this doesn't require installation and we package it up with our software releases.
If you are wondering what it is when you download our software, it is used to do linear algebra and handle matrices.

In addition, there are a few isolated bits of the code that need these other components.
Most users will not need them, but for complete functionality they are required.
First, some of our makefiles include flags for profiling and debugging.
We try to remove these before we release the code on Github,
but every now and then one sneaks through and the code won't compile if you don't have a debugger or profiler. It might save you some confusion down the line if you install:

. The `gdb` utility. This is the gnu debugger.
. The `gpof` utility. This allows you to see what parts of the code are taking up the most computational time.

Next, there are a few specialized tools that are only required by some of our more advanced components:

===== Requirements for LSDRasterSpectral

Some of our tools include spectral analysis,
and to do spectral analysis you need the http://www.fftw.org/[Fast Fourier Transform Library]

In the source code, you will find #include` statements for these libraries,
and corresponding library flags in the makefile: -lfftw3`.
In the `RasterSpectral` source files,
we assume that you will have a fast fourier transform folder in your toplevel LSDTopoTools directory.
If that paragraph doesn't make any sense to you, don't worry.
We will go into more detail about the spectral tools within the specific chapters dedicated to those tools.
You can download FFTWv3 here: http://www.fftw.org/download.html

===== Requirements for LSDRasterModel

Embedded within LSDTopoTools is a https://en.wikipedia.org/wiki/Landscape_evolution_model[landscape evolution model].
The model requires the http://www.fftw.org/[Fast Fourier Transform Library] (see above).

In addition it requires some numerical libraries:

. http://www.boost.org/[Boost], a popular c++ library.
. http://www.simunova.com/node/145[MTL] is a library for working with sparse matrices, which are required for solving some of the equations in the landscape evolution model.
  You will need MTL 4. You don't have to install anything for this, but `Boost` needs to be installed and this library goes in the `boost/numeric/mtl` subdirectory.

===== Requirements for swaths and point clouds


Okay, now things get a little more complicated because you want to use the Swath Profile tools or the LSDCloudBase object (which handles point clouds).
These objects are dependent on a set of libraries used for analyzing point cloud data,
namely:

. The `cmake` utility. This is like `make` but is required for our tools that examine point clouds,
  since it is required by something called the http://pointclouds.org/[point cloud library].
. http://pointclouds.org/[pcl]: The Point Cloud Library.
. http://www.liblas.org/[libLAS]: a library for working with LAS format data.

Unfortunately these are a bit time consuming to install, because they depend on all sorts of other bits of software that must be installed first.
You should see the <<Setting up on Linux,appendeces>> for details on how to install this software.

==== GDAL

The http://www.gdal.org/[Geospatial Data Abstraction Library] has fantastic tools for preparing your data.
It performs operations like clipping data, patching data together, resampling data, reprojecting data and doing coordinate transformations.
If you don't know what those things are, don't worry, we explain these things in the <<Preliminary steps,preliminary steps chapter>>.

You can install all of GDAL if you want, but really you will only need their http://www.gdal.org/gdal_utilities.html[utilities].

==== Python

Python is a programming language used by many scientists to visualize data and crunch numbers.
We use it for visualization, and also for automating a number of tasks associated with topographic analysis.

You will need:

. The https://www.python.org/[python programming language]
.. http://www.scipy.org/[Scipy], for scientific python. It includes lots of useful packages like
... http://www.numpy.org/[Numpy] for fast numerics.
... http://matplotlib.org/[Matplotlib] for plotting.
... http://pandas.pydata.org/[Pandas] for data analysis.

In addition, some of our python tools require GDAL, so you will have to install GDAL for these to work. 
