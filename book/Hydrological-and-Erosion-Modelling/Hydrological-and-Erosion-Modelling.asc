:numbered:

== Hydrological and Erosion Modelling

[quote, Niels Bohr, Danish Physicist 1885-1962]
Prediction is difficult, especially about the future.

Numerical models are useful tools for testing hypotheses of geomorphic processes and landscape evolution. Long term landscape evolution takes place over extensive geological time periods, but is controlled by the dynamics of water flow, and sediment transport within river catchments on much shorter, day-to-day time scales. The LSDTopoTools package provides a model for simulating catchment processes at short-term scales, with the *LSDCatchmentModel* package. 

This chapter documents how to use the LSDCatchmentModel to set up and run simulations of hydrology and catchment-scale erosion and evolution. LSDCatchmentModel is a 2.5D numerical model of landscape evolution based on the CAESAR-Lisflood model http://onlinelibrary.wiley.com/doi/10.1002/esp.3478/abstract[(Coulthard et al., 2013)]. The model is a http://natureofcode.com/book/chapter-7-cellular-automata/[Cellular Automaton] model, whereby the grid cells in the model domain each have their own parameters associated with them (such as elevation, water depth, water velocity, sediment load, etc.) and the change in these parameters is determined by the state of the neighbouring grid cells. 

Unlike many models of landscape evolution, this model features an explicit calculation of water flow through the landscape based on a highly simplified form of the shallow water equations http://www.sciencedirect.com/science/article/pii/S0022169410001538[(Bates et al., 2010)]. Most other models, in order to simulate long term evolution, rely on approximations for water discharge based on drainage area, and assume instantaneous run-off of water under hydrological steady-state conditions. The LSDCatchmentModel is therefore suited to modelling both flooding and erosional processes. It can be run as a standalone hydrological model (no erosion) if so desired.

The model is also developed to run on parallel computing architectures (Multi-core/cluster computers).

include::sections/background.asc[]

include::sections/compilation.asc[]

include::sections/running-the-model.asc[]

include::sections/hpc.asc[]


