
=== Compilation

Several versions of the make file are provided, for different situations. It is planned in the future to make a single proper makefile with different options that cover the separate versions at present. For now, you will have to select from one of the following:

1. CatchmentModel.make
2. CatchmentModel_Optimised.make
3. CatchmentModel_OpenMP_Optimised.make

The plain makefile (Option 1) contains all the compiler flags for debugging and profiling. (The program will run slower if you use this version - only use it for development or if trying to trace a bug). The optimised version (Option 2) runs with the -O2 flags and no profiler or debugger information. The OpenMP version (Option 3) is for running the code in parallel on multiple cores. This applies to desktop PCs with multiple cores as well as compiling for single compute nodes on supercomputers (cluster computers).

To compile, run make as follows with the makefile of your choice:

[source,console]
----
make -f CatchmentModel.make
----

If you want to start again and remove the object and executable files, there is also a clean command:

[source,console]
----
make -f CatchmentModel.make clean
----

You will get an executable called `CatchmentModel.out` or similar, depending on which makefile you used. 

==== Dependencies

NOTE: *Your compiler must support $$C++11$$.* Almost all compilers do as of 2016, as long as you are running a fairly recent version. Currently, support is not usually enabled by default, buy the $$C++11$$ flag to turn it on is included in the makefile. (The code uses some features of the $$C++11$$ language standard, but you don't need to worry about them if you don't want.)

The parallel version of the code uses the OpenMP libraries, which are powerful (and somewhat magical...) libraries for compiling the code to run in parallel. These are widely supported libraries and many systems will come with them pre-installed. *But you may need to install the `gcc-devel` package on linux, if using gcc*. Again, the compiler flag is taken care of in the makefile. The code has been tested on the `gcc` (versions 4.8 and above) and `icc` (intel) compilers.

All other libraries are supplied with the source code (The TNT and FFT libraries, which provide various mathematical functions). You do not need to install them separately.
