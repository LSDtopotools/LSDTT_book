:numbered:
== Extracting Hillslope Lengths

This section gives an overview of how to use the hillslope length driver (LH_Driver.cpp)
and it's companion (LH_Driver_RAW.cpp) to quickly generate hillslope length data for a
series of basins, along with other basin average metrics within a larger DEM file. It
is assumed that you are already comfortable with using LSDTopoTools, and have worked
though the tutorial: <<First Analysis>>.

For applications considering landscapes at geomorphic (millenial) timescales use the main
driver, for event scale measurements use the RAW driver. All instructions on this page will
work for either driver. For convenience it will refer only to LH_Driver.cpp but either driver
can be used.

This code is used to to produce the data for Grieve et al. (in review.)

=== Quick guide

Here is a quick overview of how to set up and run the code, if you have done it before:

. Generate a channel head file for the landscape.
. Get the window size for the surface fitting routines.
. Compile the code with: `make -f LH_Driver.make`
. Run the program `LH_Driver.out` using the path (with trailing slash), the filename prefix, window radius, basin order, a floodplain switch, and a switch to write rasters if desired as arguments.
. Analyse the resulting data files using python.

=== Overview

This driver file will combine several LSDTopoTools Functions in order to generate
as complete a range of basin average and hillslope length metrics as possible. The tool will
generate:

. A HilltopData file with metrics calculated for each hilltop pixel which can be routed to a stream pixel.
. A file containing basin averaged values of hillslope lengths and other standard metrics.
. An optional collection of trace files, which can be processed to create a shapefile of the trace paths across the landscape.
 These can be enabled by setting a flag inside the driver on line 141.

=== Input Data

This driver takes the following input data:

Raw DEM:: The raw DEM to be analysed, which should be named `<prefix>_DEM.flt`.
Channel Heads:: A file containing channel heads, which should be named `<prefix>_DEM_CH.flt`.
Channel heads can be generated using the DrEICH algorithm.
Floodplain Mask:: A binary mask of floodplains which can be used to ensure that analysis only occurs on the
hillslopes. Should be named `<prefix>_FloodPlain.flt`. This is an optional input.
Surface Fitting Window Size:: The surface fitting window size can be constrained
using the steps outlined in window_size. This should be performed to ensure the
correct parameter values are selected.

=== Compile The Driver

The code is compiled using the provided makefile, LH_Driver.make and the command:

[source,console]
----
$ make -f LH_Driver.make
----

Which will create the binary file, `LH_Driver.out` to be executed.

=== Run The Hillslope Length Driver

The driver is run with six arguments:

Path:: The data path where the channel head file and DEM is stored. The output data
 will be written here too.
Prefix:: The filename prefix, without an underscore. If the DEM is called `Oregon_DEM.flt`
the prefix would be `Oregon`. This will be used to give the output files a distinct identifier.
Window Size:: Radius in spatial units of kernel used in surface fitting. Selected using window_size.
Stream Order:: http://en.wikipedia.org/wiki/Strahler_number[The Strahler number] of basins to be extracted. Typically
a value of 2 or 3 is used, to ensure a good balance between sampling density and basin area.
Floodplain Switch:: If a floodplain raster has been generated it can be added to the
channel network by setting this switch to `1`. This will ensure that hillslope traces terminate at the hillslope-fluvial
transition. If no floodplain raster is available, or required, this switch should be set to
`0`.
Write Rasters Switch:: When running this driver several derivative rasters can be generated
to explore the results spatially. If this is required, set this switch to `1`. To
avoid writing these files set the switch to `0`. The rasters which will be written are:

* A pit filled DEM
* Slope
* Aspect
* Curvature
* Stream network
* Drainage basins of the user defined order
* Hilltop curvature
* Hillslope length
* Hillslope gradient, computed as relief/hillslope length
* Relief
* A hillshade of the DEM

The syntax to run the driver on a unix machine is as follows:

[source,console]
----
$ ./LH_Driver.out <Path> <Prefix> <Window Radius> <Stream order> <Floodplain Switch> <Write Rasters Switch>
----

And a complete example (your path and filenames will vary):

[source,console]
----
$ ./LH_Driver.out /home/s0675405/DataStore/LH_tests/ Oregon 6 2 1 0
----

=== Analysing The Results

The final outputs are stored in three plain text files, which are written to the data
folder supplied as the argument `path`.

==== <Prefix>_Paper_Data.txt

This file contains all of the basin average values for each basin, these files contain
a large number of columns, providing a wealth of basin average data. The columns in the
file, from left to right are as follows:

* BasinID =  Unique ID for the basin.
* HFR_mean = Mean hilltop flow routing derived hillslope length.
* HFR_median = Median hilltop flow routing derived hillslope length.
* HFR_stddev = Standard deviation of hilltop flow routing derived hillslope length.
* HFR_stderr = Standard error of hilltop flow routing derived hillslope length.
* HFR_Nvalues = Number of values used in hilltop flow routing derived hillslope length.
* HFR_range = Range of hilltop flow routing derived hillslope length.
* HFR_min = Minimum hilltop flow routing derived hillslope length.
* HFR_max = Maximum hilltop flow routing derived hillslope length.
* SA_binned_LH = Hillslope length from binned slope area plot.
* SA_Spline_LH = Hillslope length from spline curve in slope area plot.
* LH_Density = Hillslope length from drainage density.
* Area = Basin area.
* Basin_Slope_mean = Mean basin slope.
* Basin_Slope_median = Median basin slope.
* Basin_Slope_stddev = Standard deviation of basin slope.
* Basin_Slope_stderr = Standard error of basin slope.
* Basin_Slope_Nvalues = Number of basin slope values.
* Basin_Slope_range = Range of basin slopes.
* Basin_Slope_min = Minimum basin slope.
* Basin_Slope_max = Maximum basin slope.
* Basin_elev_mean = Mean basin elevation.
* Basin_elev_median = Median basin elevation.
* Basin_elev_stddev = Standard deviation of basin elevation.
* Basin_elev_stderr = Standard error of basin elevation.
* Basin_elev_Nvalues = Number of basin elevation values.
* Basin_elev_Range = Range of basin elevations.
* Basin_elev_min = Minimum basin elevation.
* Basin_elev_max = Maximum basin elevation.
* Aspect_mean = Mean aspect of the basin.
* CHT_mean = Mean hilltop curvature of the basin.
* CHT_median = Median hilltop curvature of the basin.
* CHT_stddev = Standard deviation of hilltop curvature of the basin.
* CHT_stderr = Standard error of hilltop curvature of the basin.
* CHT_Nvalues = Number of hilltop curvature values used.
* CHT_range = Range of hilltop curvatures.
* CHT_min = Minimum hilltop curvature in the basin.
* CHT_max = Maximum hilltop curvature in the basin.
* EStar = E* value from http://www.sciencedirect.com/science/article/pii/S0012821X07006061[Roering et al. (2007)].
* RStar = R* value from http://www.sciencedirect.com/science/article/pii/S0012821X07006061[Roering et al. (2007)].
* HT_Slope_mean = Mean slope calculated using (relief/hillslope length).
* HT_Slope_median = Median slope calculated using (relief/hillslope length).
* HT_Slope_stddev = Standard deviation of slope calculated using (relief/hillslope length).
* HT_Slope_stderr = Standard error of slope calculated using (relief/hillslope length).
* HT_Slope_Nvalues = Number of slope values calculated using (relief/hillslope length).
* HT_Slope_range = Range of slopes calculated using (relief/hillslope length).
* HT_Slope_min = Minimum slope calculated using (relief/hillslope length).
* HT_Slope_max = Maximum slope calculated using (relief/hillslope length).
* HT_relief_mean = Mean relief.
* HT_relief_median = Median relief.
* HT_relief_stddev = Standard deviation of relief.
* HT_relief_stderr = Standard error of relief.
* HT_relief_Nvalues = Number of relief values used.
* HT_relief_range = Range of reliefs.
* HT_relief_min = Minimum relief.
* HT_relief_max = Maximum relief.

This file can be loaded and the data visualized using
http://github.com/sgrieve/LH_Paper_Plotting/tree/master/Analysis_Code[these python scripts].

==== <Prefix>_HilltopData.csv

This file contains hillslope metrics calculated for every hilltop pixel in the
dataset which was routed successfully to a stream pixel. The columns in the
file, from left to right are as follows:

* X is the x coordinate of the hilltop pixel.
* Y is the x coordinate of the hilltop pixel.
* hilltop_id is the value of the hilltop pixel.
* S is the slope calculated as relief/hillslope length.
* R is the relief, the change in elevation between the hilltop and the channel
* Lh is the hillslope flow length.
* BasinID is the junction outlet number of the basin the hilltop is within.
* StreamID is the value of the stream pixel reached by the trace.
* HilltopSlope is the gradient of the pixel hwere the trace started.
* DivergentCountFlag is the count of divergent pixels crossed. *Depreciated*
* PlanarCountFlag - Count of planar cells crossed *Depreciated*
* E_Star = E* value from http://www.sciencedirect.com/science/article/pii/S0012821X07006061[Roering et al. (2007)].
* R_Star = R* value from http://www.sciencedirect.com/science/article/pii/S0012821X07006061[Roering et al. (2007)].
* EucDist - Euclidean length of the trace from hilltop to channel

This file can be loaded and the data visualized using
http://github.com/sgrieve/LH_Paper_Plotting/tree/master/Analysis_Code[these python scripts].
