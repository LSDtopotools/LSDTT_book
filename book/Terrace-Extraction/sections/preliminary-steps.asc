=== Preliminary steps

==== Getting the channel head file

Before the terrace extraction algorithm can be run, you must create a channel network for your DEM.  This can be done using the <<Channel extraction>> algorithms within LSDTopoTools.  There are several channel extraction algorithms which you can choose from: for more details please refer to the <<Channel extraction>> section.  Once you have run the channel extraction algorithm, you must make sure that the `csv` file with the channel head locations is placed in the same folder as the DEM you intend to use for terrace identification.  For the South Fork Eel River, we have already provided an example channel heads csv file which you should have downloaded in the previous step.

==== Finding the correct window size

Before we can run the terrace extraction algorithm, we need to calculate the correct window size for calculating slope across the DEM.  This is used to calculate the thresholds for terrace identification.  Please refer to the <<Selecting A Window Size>> section for information on how to calculate a window size for your DEM.  We suggest a value of around 6 m for 1 m resolution DEMs, and a value of 15 m for 10 m resoluton DEMs.

==== Creating the paramter file

In order to run the terrace extraction code you must first create a parameter file for your DEM.  If you have been following this tutorial, you should have downloaded an example parameter file for the Eel River DEM and placed this in the same folder as your DEM and the channel heads `csv` file.  The example from the Eel River is called `LSDTT_Swath.param` and should look like this:

[source,paramfile]
----
# This is a driver file for LSDTopoTools
# Any lines with the # symbol in the first row will be ignored

# File information
dem read extension: bil
dem write extension: bil
read path: /LSDTopoTools/Topographic_projects/Eel_River/
read fname: Eel_River_DEM
channel heads fname: Eel_River_DEM_CH_wiener_nodeindices_for_Arc
coords_csv_file: Eel_River_DEM_coordinates.csv

# Parameters for DEM processing
Filter topography: true
Min slope filling: 0.0001
surface_fitting_window_radius: 6

# Parameters for swath post-processing
HalfWidth: 1000
search_radius: 10
Threshold_SO: 3
NormaliseToBaseline: 1

# Pararmeters for terrace extraction
QQ threshold: 0.005
Relief lower percentile: 25
Relief upper percentile: 75
Slope lower percentile: 25
Slope upper percentile: 75
Min patch size: 1000
Min terrace height: 5
----
You can run the analysis on the Eel River DEM using the example parameter file, and modify it as you wish for your own DEM.

WARNING: You must make sure the description of the parameter in your file matches EXACTLY to the example, or the code will not recognise the parameter properly. If in doubt, check your spelling.

The table below explains the function of each of these parameters:


[cols="1,1,2", options="header"]
.Explanation of the parameters used for terrace extraction
|===
|Parameter name
|Data type
|Description

|dem read extension
|String
|The file extension of your input DEM

|dem write extension
|String
|The file extension of the output rasters

|read path
|String
|The path to your DEM and parameter file

|read fname
|String
|The name of your DEM *without extension*

|channel heads fname
|String
|The name of the channel heads csv file *without extension*

|coords_csv_file
|String
|The name of the csv file with the coordinates to extract the terraces (must end in .csv)

|Filter topography
|Boolean
|Switch to run the filtering and filling of the DEM. Only set to false if you want to re-run the analysis (to save time).

|Min slope filling
|float
|Minimum slope for filling the DEM, suggested to be 0.0001

|surface_fitting_window_radius
|float
|Window radius for calculating slope, should be calculated using the window size routines

|HalfWidth
|integer
|Width of the swath profile in metres

|search_radius
|integer
|Number of pixels to search around input latitude/longitude coordinates for the nearest channel.

|Threshold_SO
|integer
|Threshold Strahler stream order for the baseline channel.  A value of 3 should work in most landscapes.

|NormaliseToBaseline
|integer
|Switch to normalise the elevations to the nearest channel. For terrace extraction this should always be set to 1.

|QQ threshold
|float
|Threshold for calculating difference between the real and Gaussian distributions from the quantile-quantile plots. Leave as 0.005 unless you have a weird quantile-quantile plot for the landscape.

|Relief lower percentile
|integer
|Lower percentile for fitting Gaussian distribution to relief from quantile-quantile . Leave as 25 unless you have a weird quantile-quantile plot for the landscape.

|Relief upper percentile
|integer
|Upper percentile for fitting Gaussian distribution to relief from quantile-quantile plots. Leave as 75 unless you have a weird quantile-quantile plot for the landscape.

|Slope lower percentile
|integer
|Lower percentile for fitting Gaussian distribution to slope from quantile-quantile plots. Leave as 25 unless you have a weird quantile-quantile plot for the landscape.

|Slope upper percentile
|integer
|Upper percentile for fitting Gaussian distribution to rslope from quantile-quantile plots. Leave as 75 unless you have a weird quantile-quantile plot for the landscape.

|Min patch size
|integer
|Minimum number of pixels for each terrace, can use to remove very small patches which may be due to noise.

|Min terrace height
|float
|Minimum height of terraces above the channel. Used to remove modern floodplains.

|===


==== Getting the latitude and longitude coordinates

To run the code, you need to provide a CSV file with two pairs of coordinates which specify the upstream and downstream points between which you want to find the terraces.  The easiest way to do this is on Google Earth.

We have written the code so that it will take the coordinates in latitude and longitude and automatically convert them to the same UTM zone as the DEM - you don't need to do this yourself!  If you are following the tutorial for the Eel River site, then you should have downloaded the file `Eel_River_DEM_coordinates.csv` and placed this in the same folder as your DEM.  For example, the Eel River file has the following structure:

[source,csv_file]
----
Point_ID,Latitude,longitude
1,39.722956,-123.650299
2,39.754546,-123.631409
----

IMPORTANT: The first point in the csv file must be the *upstream* point and the second point must be the *downstream* point. If this isn't the case then the code will break!
