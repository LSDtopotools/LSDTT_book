== Terrace extraction using channel relief and slope thresholds

IMPORTANT: These tools have extra dependencies in addition to a standard installation of LSDTopoTools. Make sure you have read the <<Requirements for swaths and point clouds,requirements overview>> section and installed the libraries needed to run these tools. Detailed installation information is also found in the <<The Swath and Point Cloud tools, appendix>>.

This chapter outlines a method of extracting terraces across the landscape based on thresholds of local gradient and elevation compared to the nearest channel.  These thresholds are calculated statistically from the DEM using quantile-quantile plots, and do not need to be set manually by the user for the lansdcape in question.  For more details on the methodology please refer to Clubb et al. (in prep).

Our method extracts terraces along a channel swath profile using an algorithm developed by http://www.earth-surf-dynam-discuss.net/1/387/2013/esurfd-1-387-2013.html[Hergarten et al. (2014)].  The user needs to provide a CSV file with a pair of latitude and longitude coordinates.  The code will extract the channel network between these coordinates and identify all terraces along this baseline channel.

The method has several steps, which are outlined below:

. The DEM is filtered using a Perona-Malik filter, a non-linear filter. For more details please refer to http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=56205[Perona and Malik (1990)]. This filter was chosen as it reduces micro-topographic noise while preserving sharp boundaries, such as between hillslopes and floodplains.
. After filtering, the local slope and relief relative to the nearest channel are calculated for each pixel.  To calculate the relief relative to the channel, a threshold stream order must be set to ensure that small first order tributaries are not selected.
. Thresholds for slope and channel relief are calculated statistically from the DEM using quantile-quantile plots.  This involves plotting the probability density function of each metric and calculating the deviation away from a reference normal distribution.
. Any pixel with a value lower than both the channel relief and slope threshold is then classified as terrace, giving a binary mask of 1 (terrace) and 0 (not terrace).
. A minimum terrace height is used to remove any pixels representing the modern floodplain. The minimum terrace height must be specified by the user.
. A connected components algorithm (http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4472694[He et al. (2008)]) is then run to assign a unique ID to each terrace.
. The user can specify various topographic metrics to calculate for each terrace, such as elevation compared to the channel.


WARNING: This method is in development. We cannot guarantee a bug-free experience!

.Quick guide if you already know what you are doing
*****************************************************************************

Here is a quick overview of how to set up and run the code, if you have done it before:

. Choose the channel extraction method that you would like to use.
. Make sure your DEM is in `bil` format and is in the repository folder
. Create a parameter file for your DEM
. Make sure you have created a channel network for your DEM, and have the `csv` file in your repository.
. Compile the code using the compile script `bash compile.sh`
. Run the program with `./terraces_swath_driver.out /path_to_data_folder/ parameter_file.param`
. Open the resulting `bil` files in the GIS of your choice.
. Use the Python plotting scripts to analyse terrace metrics with distance upstream along the channel.
*****************************************************************************

include::sections/terrace-extraction-get-the-code.asc[]

include::sections/preliminary-steps.asc[]

include::sections/running-the-code.asc[]
