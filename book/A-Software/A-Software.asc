[appendix]
== Software

.BEFORE YOU READ ANY OF THIS
************************************************
These sections are for information only: if you just want to get LSDTopoTools working all you need to read is the section on <<Installing LSDTopoTools on a Windows machine using VirtualBox and Vagrant>>. 
************************************************

There are quite a few different components you need to get working on your system to perform the examples in this book (sorry!).
Some of these are essential, and some are optional and included for completeness.
In the following appendices, instructions for getting them installed on <<Setting up on Windows,Windows>>
or <<Setting up on Linux,Linux>> are included. Since the author of this book does not have any computers running on friut-based operating system,
I'm afraid instructions for getting the software working on such systems will require a bit of homework,
but in theory installation on such systems should be similar to installation on Linux systems.

=== Essentials

The following tools are core to the contents of this book,
and will need to be installed before you can work on the exercises in the book.

==== Git

https://git-scm.com/[Git] is version control software. It helps you keep track of changes to your scripts, notes, papers, etc.
It also facilitates communication and collaboration through the online communities https://github.com/[github] and https://bitbucket.org/[bitbucket].
The source code for LSDTopoTools is on https://github.com/[github] so by using https://git-scm.com/[Git] you can make sure you always have the latest version of the software. 

==== pass:[C++] tools

A number of scientific programs are written in these languages so information on how to get them working on your windows machine is incluided here for completeness.

To get these working you will need

. The compiler. This is what translates the program into something the computer can understand.
. The tool `make`, which automates building programs.
. The tool `gdb`. which stands for gnu debugger, a tool for debugging code.
. The tool `gprof`, which is a profiler: it allows you to see which parts of your code are using the most computational resources.

==== Python

Python is a programming language used by many scientists to visualize data and crunch numbers. You can also use it to automate data management.

You will need:

. The https://www.python.org/[python programming language]
.. http://www.scipy.org/[Scipy], for scientific python. It includes lots of useful packages like
... http://www.numpy.org/[Numpy] for fast numerics.
... http://matplotlib.org/[Matplotlib] for plotting.
... http://pandas.pydata.org/[Pandas] for data analysis.
.. https://pypi.python.org/pypi/pip[pip] for python package management.

==== GDAL

http://www.gdal.org/[GDAL (the Geospatial Data Abstraction Library)] is used to manipulate topographic data so that it can be fed into LSDTopoTools. 

=== Useful extras

You could find these tools useful. In particular, my documentation is written using something called http://asciidoctor.org/[asciidoctor], which is implemented in a programming language called Ruby.

==== A virtual machine

This is essential if you are going to follow our instructions for <<Installing LSDTopoTools on a Windows machine using VirtualBox and Vagrant>>, 
which is propbably what you will want to do if you do not have a Linux machine. 

To do this you will need to intall https://www.vagrantup.com/[Vagrant] and https://www.virtualbox.org/[VirtualBox].

==== Geographic Information Software

If you want to look at the data produced by LSDTopoTools, you could use our lightweight python tools, 
but in many cases you will want to use a GIS. 

The common options are:

* http://www.esri.com/software/arcgis[ArcGIS] The GIS most frequently used by commercial enterprise and government. 
It is commercial software and rather expensive. If your organisation has a licence, fantastic.
However not all users of our software will have a licence so all tutorials in this book will be based on open source software. 
* http://www.qgis.org/en/site/[QGIS] A GIS that behaves much like ArcGIS, but is open source. 
* http://www.uoguelph.ca/~hydrogeo/Whitebox/[Whitebox] A very lightweight, open source GIS written in java. This is handy since it is quite portable: 
there is nothing to install, just copy the `.jar` file on your computer and away you go!


==== Ruby

Ruby is a programming language used frequently by web developers and has many package for building documentation and automating collection of data over the internet.
In this book we will really only use it for documentation, but there is a large ecosystem of open source tools available in Ruby.
It hasn't been adopted to a great extent by the scientific community but you may still find useful tools, particularly if you are gathering online information.

The main reason we use Ruby is to generate our documentation using http://asciidoctor.org/[Asciidoctor], 
so if you fancy contributing to the documentation of getting the latest version, you will need to get Ruby and some associated tools. 

You will need:

. The https://www.ruby-lang.org/en/[Ruby] programming language
.. https://rubygems.org/[Rubygems] for updating ruby.
.. http://bundler.io/[bumdler] for managing updates and making sure scripts are up to date.
.. http://rubyinstaller.org/add-ons/devkit/[RubyDev kit] which is needed for some other Ruby packages.
.. http://asciidoctor.org/[asciidoctor] for making notes, documentation and books.
.. https://github.com/oneclick/rubyinstaller/wiki/Development-Kit[Ruby DevKit] which is used by some Ruby extensions. 
. In addition you will need https://nodejs.org/[Node.js] for some of the Ruby tools to work.


