=== Chi analysis part 3: Getting chi gradients for the entire landscape

The algorithms in the previous two sections were designed for users to statistically determine the stem:[m/n] ratio of a given landscape. 
The routines calculate the gradient in chi space (which we call stem:[M_{\chi}]) but they focus on the main stem
(which in our code is calculated with the longest channel) and its biggest tributaries. 

In many applications, however, users may with to map the chi gradient across a landscape. We provide a tool for doing so in the driver function 'map_chi_gradient.cpp'. 

==== Compile the code

The chi gradient mapping tool can be compiled by navigating to the driver function folder and running `make`:

[source,console]
-----
$ make -f map_chi_gradient.make
-----

==== Run the map chi gradient tool

The program is now ready to run with the correct inputs. The function takes two inputs

1. The path to the parameter file.
2. The name of the parameter file.

So if the parameter file is located at `/home/test_data/some_data/` and it is called 'test_chi_map.param', you run the program with:

[source,console]
-----
$ ./map_chi_gradient.exe /home/test_data/some_data/ test_chi_map.param 
-----

As we will see momentarily, the data an the parameter file can be in different locations, although in general it maght be sensible to place the parameter file in the sample directory as the data.

===== The parameter file

The parameter file has keywords followed by a value. The format of this file is similar to the files used in the `LSDTT_analysis_from_paramfile` program, which you can read about in the section <<Running your first analysis>>.

The parameter file has keywords followed by the `:` character. After that there is a space and the value. 

.Chi mapping parameter file format
************************************************
. Lines beginning with `#` are comments.
. Keywords or phrases are followed by a colon (`:`).
. The order of the keywords do not matter.
. Keywords are not sensitive, but must match expected keywords.
. If a keyword is not found, a default value is assigned.
************************************************


==== Parameter file options

Below are options for the parameter files. Note that all DEMs must be in ENVI `bil` format (**DO NOT** use ArcMap's bil format: these are two different things. See the section <<What data does LSDTopoToolbox take?>> if you want more details). 
The reason we use `bil` format is because it retains georeferencing which is essential to our file output since many of the files output to `csv` format with latitude and longitude as coordinates. 


[cols="1,1,2", options="header"]
.File input and output options. **These do not have defaults and MUST be declared**.
|===
|Keyword
|Input type
|Description

|write path
|string
|The path to which data is written. **The code will NOT create a path: you need to make the write path before you start running the program.**

|read path
|string
|The path from which data is read.

|write fname
|string
|The prefix of rasters to be written *without extension*.
For example if this is `Test` and you have selected `bil` format then a fill operation will result in a file called `Test_Fill.bil`.

|read fname
|string
|The filename of the raster to be read without extension. For example if the raster is `MyRaster.bil`, read fname will be `MyRaster`.


|channel heads fname
|string
|The filename of a channel heads file. You can import channel heads. If this is set to `NULL` then the channels will be calculated using a pixel threshold. 



|===

[cols="1,1,1,3", options="header"]
.Options for determining which channels and basins to analyse, including settings for the fill function.
|===
|Keyword
|Input type
|Default value
|Description


|min_slope_for_fill
|float
|0.001
|The minimum slope between pixels for use in the fill function. 

|threshold_contributing_pixels
|int
|1000
|The number of pixes required to generate a channel (i.e., the source threshold).

|minimum_basin_size_pixels
|int
|1000
|The minimum number of pixels in a basin for it to be retained. This operation works on the baselevel basins: subbasins within a large basin are retained. 

|test_drainage_boundaries
|bool (true or 1 will work)
|false
|A boolean that, if set to true, will eliminate basins with pixels drainage from the edge. This is to get rid of basins that may be truncated in a DEM (and thus will have incorrect chi values). 

|only_take_largest_basin
|bool (true or 1 will work) 
|false
|If this is true, a chi map is created based only upon the largest basin in the raster. 

|===

[cols="1,1,1,2", options="header"]
.Parameters for calculating the chi coordinate.
|===
|Keyword
|Input type
|Default value
|Description

|A_0
|float
|1000
|The *A~0~* parameter (which nondimensionalises area) for chi analysis. This is in m^2^.

|m_over_n
|float
|0.5
|The *m/n* paramater (sometimes known as the concavity index) for calculating chi. 

|threshold_pixels_for_chi
|int
|1000
|The number of contributing pixels above which chi will be calculated. The reason for the threshold is to produce chi plots that do not extend onto hillslopes; this helps visualisation of chi differences between nearby headwater channels. 

|===

[cols="1,1,1,2", options="header"]
.Parameters for calculating the segments of similar chi slope (stem:[M_{\chi}]). More details on the use fo these parameters can be found in http://onlinelibrary.wiley.com/doi/10.1002/2013JF002981/abstract[Mudd et al., JGR-ES 2014].
|===
|Keyword
|Input type
|Default value
|Description

|n_iterations
|int
|20
|The number of iterterations of random sampling of the data to construct segments. The sampling probability of individual nodes is determined by the skip parameter. 

|minimum_segment_length
|int
|10
|The minimum length of a segment in sampled data nodes. The actual length is approxamately this parameter times (1+skip).  

|skip
|int
|2
|During Monte Carlo sampling of the channel network, nodes are sampled by skipping nodes after a sampled node. The skip value is the mean number of skipped nodes after each sampled node. For example, if skip = 1, on average every other node will be sampled. Skip of 0 means every node is sampled (in which case the n_iterations should be set to 1, because there will be no variation in the fit between iterations).


|sigma
|float
|10
|This represents the variability in elevation data (if the DEM has elevation in metres, then this parameter will be in metres). It should include both uncertainty in the elevation data as well as the geomorphic variability: the size of roughness elements, steps, boulders etc in the channel that may lead to a channel profile diverging from a smooth long profile. 

|===

[cols="1,3", options="header"]
.Keywords for setting which analyses to be preformed and which files to print. **These are all booleans!** **Defaults are all false so these parameters must be set to true to perform analyses and print to file. 
|===
|Input type
|Description

|only_check_parameters
|If this is true, the program simply prints all the parameters to a file and does not perform any analyses. This is used for checking if the parameters are set correctly and that the keywords are correct. 

|print_stream_order_raster
|If true, prints a raster of the stream orders. 

|print_junction_index_raster
|If true, prints a raster with the junction indices.

|print_fill_raster
|If true, prints a filled raster

|print DrainageArea_raster
|If true, prints a raster of the draiange area in m^2^.

|print_chi_coordinate_raster
|If true, prints a raster with the chi coordinate (in m). Note that if you want to control the size of the data symbols in a visualisation, you should select the `print_simple_chi_map_to_csv` option. 

|print_simple_chi_map_to_csv
|If true, prints a csv file with latitude, longitude and the chi coordinate. Can be converted to a shapefile or GeoJSON with our python mapping scripts. This options gives more flexibility in visualisation than the raster, since in the raster data points will only render as one pixel.


|===

==== Example parameter file

Below is an exaple parameter file. This file is included in the repository along with the driver functions. 
[source,paramfile]
----
DATADIR /home/data/FR/fr_data/
OUTPUTDIR /home/data/FR/ChiGradientMap_with_1_basins/

DEMFILE fr_5m
CHEADSFILE fr_CH_dreich_nodeindices_for_Arc
DEM_ext flt
BasinOrder 2
MinSlope 0.0001
A_0 1000
m_ov_n 0.30
number_of_mc_iterations 500
TargetNodes 80
MinSegLength 10
Sigma 10.0
Skip 0
threshold_pixels_for_chi 250
test_drainage_boundaries false
----

Below is a table with the values for this parameter file:
