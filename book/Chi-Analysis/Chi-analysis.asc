:numbered:

== Chi analysis

In the late 1800s, G.K. Gilbert proposed that bedrock channel incision should be proportional to topographic gradients and the amount of water flowing in a channel.
Since then, many geomorpholgists have attempted to extract information about erosion rates from channel profiles.
Chi analysis is a method of extracting information from channel profiles that attempts to compare channels with different discharges first proposed by Leigh Royden and colleagues at MIT.
https://lsdtopotools.github.io/[LSDTopoTools] has a number of tools for performing chi analysis.

This document gives instructions on how to use the segment fitting tool for channel profile analysis
developed by the Land Surface Dynamics group at the University of Edinburgh.
The tool is used to examine the geometry of channels using the integral method of channel profile analysis.
For background to the method, and a description of the algorithms, we refer the reader to
http://www.http://onlinelibrary.wiley.com/doi/10.1002/2013JF002981/abstract[Mudd et al. (2014)].
For background into the strengths of the integral method of channel profile analysis,
the user should read http://mit.edu/perron/www/files/PerronRoyden13.pdf[Perron and Royden (2013, ESPL)].

This document guides the user through the installation process, and explains how to use the model.
You will need a c++ compiler for this tutorial. If you have no idea what a c++ compiler is, see the appendix.
Visualisation of the model results is performed using Python scripts. We recommend installing 
https://code.google.com/p/pythonxy/[Python(x,y)] or https://www.continuum.io/downloads[Anaconda] 
and running the scripts within Spyder (which is installed with Python(x,y) and Anaconda).

Both the recommended compiler and Python(x,y) are *open source*: you do not need to buy any
3rd party software (e.g., Matlab) to run our topographic analysis!


include::sections/background.asc[]

include::sections/get-the-code.asc[]

include::sections/getting-profiles.asc[]

include::sections/constraining-m-n.asc[]


=== Summary

You should now be able to extract some simple topographic metrics from a DEM using our Driver_analysis program.
